/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    id("io.freefair.lombok") version "8.12.1"
    `maven-publish`
    id("pl.allegro.tech.build.axion-release") version "1.18.16"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
    implementation("org.jetbrains:annotations:24.0.0")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.11.1")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

scmVersion {
    releaseOnlyOnReleaseBranches = true
    releaseBranchNames.set(listOf("release/.*", "hotfix/.*"))
    tag.prefix = "v"

    branchVersionIncrementer.putAll(
        mapOf(
            "hotfix/.*" to "incrementPatch",
            "release/.*" to "incrementMinor",
        )
    )

    repository {
        customPassword = System.getenv("CI_ACCESS_TOKEN")
        customUsername = System.getenv("CI_USERNAME")
    }
}

project.version = scmVersion.version
